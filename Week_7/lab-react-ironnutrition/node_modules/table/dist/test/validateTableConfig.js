"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ajv_1 = __importDefault(require("ajv"));
const ajv_keywords_1 = __importDefault(require("ajv-keywords"));
const chai_1 = require("chai");
const validators_1 = __importDefault(require("../src/generated/validators"));
const config_json_1 = __importDefault(require("../src/schemas/config.json"));
const shared_json_1 = __importDefault(require("../src/schemas/shared.json"));
const tableConfigSamples_1 = require("./tableConfigSamples");
const validateConfig = validators_1.default['config.json'];
describe('config.json schema', () => {
    let validate;
    before(() => {
        const ajv = new ajv_1.default({ allErrors: true });
        (0, ajv_keywords_1.default)(ajv, 'typeof');
        ajv.addSchema(shared_json_1.default);
        validate = ajv.compile(config_json_1.default);
    });
    it('passes validation of valid config samples', () => {
        for (const sample of tableConfigSamples_1.tableConfigSamples.valid) {
            (0, chai_1.expect)(validate(sample)).to.equal(true);
            (0, chai_1.expect)(validateConfig(sample)).to.equal(true);
        }
    });
    it('fails validation of invalid config samples', () => {
        for (const sample of tableConfigSamples_1.tableConfigSamples.invalid) {
            (0, chai_1.expect)(validate(sample)).to.equal(false);
            (0, chai_1.expect)(validateConfig(sample)).to.equal(false);
        }
    });
});
//# sourceMappingURL=validateTableConfig.js.map