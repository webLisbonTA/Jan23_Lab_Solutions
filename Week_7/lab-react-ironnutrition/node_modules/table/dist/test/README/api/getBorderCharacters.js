"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../../../src");
const utils_1 = require("../../utils");
describe('README.md api/getBorderCharacters', () => {
    let data;
    before(() => {
        data = [
            ['0A', '0B', '0C'],
            ['1A', '1B', '1C'],
            ['2A', '2B', '2C'],
        ];
    });
    it('honeywell', () => {
        const output = (0, src_1.table)(data, {
            border: (0, src_1.getBorderCharacters)('honeywell'),
        });
        (0, utils_1.expectTable)(output, `
╔════╤════╤════╗
║ 0A │ 0B │ 0C ║
╟────┼────┼────╢
║ 1A │ 1B │ 1C ║
╟────┼────┼────╢
║ 2A │ 2B │ 2C ║
╚════╧════╧════╝
        `);
    });
    it('norc', () => {
        const output = (0, src_1.table)(data, {
            border: (0, src_1.getBorderCharacters)('norc'),
        });
        (0, utils_1.expectTable)(output, `
┌────┬────┬────┐
│ 0A │ 0B │ 0C │
├────┼────┼────┤
│ 1A │ 1B │ 1C │
├────┼────┼────┤
│ 2A │ 2B │ 2C │
└────┴────┴────┘
        `);
    });
    it('ramac', () => {
        const output = (0, src_1.table)(data, {
            border: (0, src_1.getBorderCharacters)('ramac'),
        });
        (0, utils_1.expectTable)(output, `
+----+----+----+
| 0A | 0B | 0C |
|----|----|----|
| 1A | 1B | 1C |
|----|----|----|
| 2A | 2B | 2C |
+----+----+----+
        `);
    });
    it('void', () => {
        const output = (0, src_1.table)(data, {
            border: (0, src_1.getBorderCharacters)('void'),
        });
        (0, utils_1.expectTable)(String(output).trim() + '\n', '0A  0B  0C \n\n 1A  1B  1C \n\n 2A  2B  2C');
    });
    it('borderless', () => {
        const output = (0, src_1.table)(data, {
            border: (0, src_1.getBorderCharacters)('void'),
            columnDefault: {
                paddingLeft: 0,
                paddingRight: 1,
            },
            drawHorizontalLine: () => {
                return false;
            },
        });
        (0, utils_1.expectTable)(String(output).trim() + '\n', '0A 0B 0C \n1A 1B 1C \n2A 2B 2C');
    });
});
//# sourceMappingURL=getBorderCharacters.js.map