"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const calculateCellWidths_1 = require("../src/calculateCellWidths");
describe('calculateCellWidths', () => {
    context('all cells have different width', () => {
        it('describes each cell contents width', () => {
            const cellWidths = (0, calculateCellWidths_1.calculateCellWidths)([
                'a',
                'aaa',
                'aaaaaa',
            ]);
            (0, chai_1.expect)(cellWidths[0]).to.equal(1, 'first column');
            (0, chai_1.expect)(cellWidths[1]).to.equal(3, 'second column');
            (0, chai_1.expect)(cellWidths[2]).to.equal(6, 'third column');
        });
    });
    context('cell contains newline characters', () => {
        it('picks the longest line length', () => {
            const cellWidths = (0, calculateCellWidths_1.calculateCellWidths)([
                'aaaa\naa',
            ]);
            (0, chai_1.expect)(cellWidths[0]).to.equal(4);
        });
    });
});
//# sourceMappingURL=calculateCellWidths.js.map