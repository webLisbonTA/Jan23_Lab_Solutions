{"ast":null,"code":"var _jsxFileName = \"/Users/lucaszaquine/Desktop/solut/Apr22_Lab_Solutions/week6/lab-react-ironnutrition/src/components/FoodList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport foodsJson from \"../foods.json\";\nimport FoodBox from './FoodBox';\nimport AddFoodForm from './AddFoodForm';\nimport SearchFood from './SearchFood';\nimport { Row, Divider, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FoodList() {\n  _s();\n\n  //master array of Foods\n  const [allFoods, setAllFoods] = useState(foodsJson); //rendered array of Foods\n\n  const [foods, setFoods] = useState(foodsJson); //toggle button state\n\n  const [isFormShowing, setIsFormShowing] = useState(false); //rendered list state\n\n  const [isFoodArrEmpty, setIsFoodArrEmpty] = useState(false); //Function - add new food from AddFoodForm.js\n\n  const addNewFood = foodObj => {\n    //update the array of rendered foods\n    const updatedFoods = [foodObj, ...foods]; //update master array of foods\n\n    const updatedAllFoods = [foodObj, ...allFoods]; //Update the state\n\n    setFoods(updatedFoods);\n    setAllFoods(updatedAllFoods);\n  }; //Function - delete food from FoodBox.js > delete button\n\n\n  const deleteFood = foodName => {\n    const filteredFoods = foods.filter(food => {\n      return food.name !== foodName;\n    });\n\n    if (filteredFoods.length === 0) {\n      setIsFoodArrEmpty(true);\n    }\n\n    setFoods(filteredFoods);\n    console.log(`foodObj Deleting`, foodName);\n  }; //Function - search foods from SearchFood,js\n\n\n  const searchFoodList = queryString => {\n    let searchedFoods = allFoods.filter(food => {\n      return food.name.toLowerCase().includes(queryString.toLowerCase());\n    });\n\n    if (searchedFoods.length === 0) {\n      setIsFoodArrEmpty(true);\n    }\n\n    setFoods(searchedFoods);\n  }; //Toggle Form\n\n\n  const toggleAddForm = () => {\n    setIsFormShowing(!isFormShowing);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a New Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), isFormShowing && /*#__PURE__*/_jsxDEV(AddFoodForm, {\n      addNewFood: addNewFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleAddForm,\n      children: isFormShowing ? \"Hide Form\" : \"Show Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchFood, {\n      searchFoodList: searchFoodList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Food List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [5, 30],\n      style: {\n        width: \"100%\"\n      },\n      children: isFoodArrEmpty ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Oppssss! No food here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this) : foods.map(food => {\n        return /*#__PURE__*/_jsxDEV(FoodBox, {\n          foodObj: food,\n          deleteFood: deleteFood\n        }, food.name + food.calories, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodList, \"SaG05rHqrD2lU0wT05YLjEHZY2Y=\");\n\n_c = FoodList;\nexport default FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/Users/lucaszaquine/Desktop/solut/Apr22_Lab_Solutions/week6/lab-react-ironnutrition/src/components/FoodList.js"],"names":["useState","foodsJson","FoodBox","AddFoodForm","SearchFood","Row","Divider","Button","FoodList","allFoods","setAllFoods","foods","setFoods","isFormShowing","setIsFormShowing","isFoodArrEmpty","setIsFoodArrEmpty","addNewFood","foodObj","updatedFoods","updatedAllFoods","deleteFood","foodName","filteredFoods","filter","food","name","length","console","log","searchFoodList","queryString","searchedFoods","toLowerCase","includes","toggleAddForm","width","map","calories"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport foodsJson from \"../foods.json\";\nimport FoodBox from './FoodBox';\nimport AddFoodForm from './AddFoodForm';\nimport SearchFood from './SearchFood';\nimport { Row, Divider, Button } from \"antd\";\n\n\nfunction FoodList() {\n    //master array of Foods\n    const [allFoods, setAllFoods] = useState(foodsJson)\n    //rendered array of Foods\n    const [foods, setFoods] = useState(foodsJson)\n    //toggle button state\n    const [isFormShowing, setIsFormShowing] = useState(false);\n    //rendered list state\n    const [isFoodArrEmpty, setIsFoodArrEmpty] = useState(false);\n\n    //Function - add new food from AddFoodForm.js\n    const addNewFood = (foodObj) => {\n    //update the array of rendered foods\n    const updatedFoods = [foodObj, ...foods];\n    \n    //update master array of foods\n    const updatedAllFoods = [foodObj, ...allFoods]\n\n    //Update the state\n    setFoods(updatedFoods);\n    setAllFoods(updatedAllFoods);   \n\n}\n\n    //Function - delete food from FoodBox.js > delete button\n    const deleteFood = (foodName) => {\n        \n        const filteredFoods = foods.filter(food => {\n            return food.name !== foodName;\n        })\n\n        if(filteredFoods.length === 0) {\n            setIsFoodArrEmpty(true);\n        }\n\n        setFoods(filteredFoods);\n        console.log(`foodObj Deleting`, foodName);\n    }\n\n    //Function - search foods from SearchFood,js\n    const searchFoodList = (queryString) => {\n        let searchedFoods = allFoods.filter((food) => {\n            return food.name.toLowerCase().includes(queryString.toLowerCase());\n        })\n\n        if(searchedFoods.length === 0) {\n            setIsFoodArrEmpty(true);\n        }\n\n        setFoods(searchedFoods);\n       \n    }\n\n    //Toggle Form\n    const toggleAddForm = () => {\n        setIsFormShowing(!isFormShowing);\n    }\n\n    return (\n        <>\n        <Divider><h2>Add a New Food</h2></Divider>\n        {isFormShowing && <AddFoodForm addNewFood={addNewFood}/>}\n\n        <Button onClick={toggleAddForm}>\n            {isFormShowing ? \"Hide Form\" : \"Show Form\"}\n        </Button>\n\n        <SearchFood searchFoodList={searchFoodList}/>\n\n        <Divider><h2>Food List</h2></Divider>\n\n        <Row gutter={[5, 30]} style={{ width: \"100%\"}}>\n\n        {isFoodArrEmpty ? \n        \n        <p>Oppssss! No food here</p> \n        \n        : foods.map(food => {\n            return (\n                <FoodBox key={food.name+food.calories} foodObj={food} deleteFood={deleteFood}/>\n            )\n        })\n        }\n        </Row>\n        </>\n     );\n}\n\nexport default FoodList;\n\n"]},"metadata":{},"sourceType":"module"}